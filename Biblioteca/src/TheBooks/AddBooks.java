/*
 * BOOKS FORM
 * FIELDS:  BookID, Book Title, BarCode, Book Date, Category, Book Type, Publisher, Price
 * FILE:   book.txt
 */
package TheBooks;


import TheBooks.BooksObject.Book;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Created Mar 23 2019
 * Modified Mar 26 2019
 * @author Roberto Gomez
 * @version 2
 */
public class AddBooks extends javax.swing.JInternalFrame {

    /**
     * Feb 19, 2019 Roberto: Creates new form AddMember
     */
    public AddBooks() {
        initComponents();
        // Feb 20, 2019 Roberto: Update the Table
        Show_Books_In_JTable();
    }
    
    // Feb 20 2019 Roberto: This is the file that has all the data for this package
    String filepath = "book.txt";
    private static Scanner x;
    
   // Feb 19, 2019 Roberto: This section search for a Record in the file by Employee ID
        public static void searchRecord (String searchterm, String filepath) throws FileNotFoundException
        {
            boolean found = false;
            String bookid = "";
            String booktitle = "";
            String barcode = "";
            String bookdate;
            String category;
            String booktype;
            String publisher;
            String bookprice;
            
            try
            {
                x = new Scanner(new File(filepath));
                x.useDelimiter("[,\n]");
                
                while(x.hasNext() && !found )
                {
                    bookid = x.next();
                    booktitle = x.next();
                    barcode = x.next();
                    bookdate = x.next();                
                    category = x.next();
                    booktype = x.next();
                    publisher = x.next();
                    bookprice = x.next();
                    
                    if ( bookid.equals(searchterm))
                    {
                        found = true;
                    }
                }
                if (found)
                {
                    JOptionPane.showMessageDialog(null, "Account: " + bookid
                            + "\nBook Title: " + booktitle
                            + "\nBarcode: " + barcode);                            
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"record NOT found");
                }                
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Error");
            }   
        }
    
        // Feb 19, 2019 Roberto: This section will save the new record in the file
        public static void saveRecord(String bID, String bTitle, String bCode, String bDate, String cat, String bType, String pub, String bPrice, String FilePath)
        {
            try
            {
                FileWriter fw = new FileWriter(FilePath, true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pw = new PrintWriter(bw);
                
                pw.println(bID + ", " + bTitle + ", " + bCode + ", "
                        + bDate + ", " + cat + ", " + bType + ", "
                        + pub + ", " + bPrice + "\n");
                pw.flush();
                pw.close();
                
                JOptionPane.showMessageDialog(null, "Record Saved");
            }
            catch (Exception E)
            {
                JOptionPane.showMessageDialog(null, "Record NOT saved");
            }
        }
        
        // Mar 29, 2019 Roberto:  Save ArrayList to File
        public void save(String fileName) throws FileNotFoundException 
        {
            try (PrintWriter pw = new PrintWriter(new FileOutputStream(fileName))) 
            {
                    ArrayList<Book> books = new ArrayList<Book>();
                  // for (Book bookList : books)
                  //     pw.println(books.getBook());
            }
        }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_titleBooks = new javax.swing.JLabel();
        txt_searchBookID = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lbl_account = new javax.swing.JLabel();
        lbl_firstName = new javax.swing.JLabel();
        lbl_lastName = new javax.swing.JLabel();
        lbl_Birthday = new javax.swing.JLabel();
        lbl_gender = new javax.swing.JLabel();
        lbl_email = new javax.swing.JLabel();
        lbl_phone = new javax.swing.JLabel();
        lbl_status = new javax.swing.JLabel();
        txt_bookID = new javax.swing.JTextField();
        txt_bookTitle = new javax.swing.JTextField();
        txt_barcode = new javax.swing.JTextField();
        txt_bookDate = new com.toedter.calendar.JDateChooser();
        combo_category = new javax.swing.JComboBox<>();
        txt_bookPrice = new javax.swing.JTextField();
        txt_publisher = new javax.swing.JTextField();
        combo_bookType = new javax.swing.JComboBox<>();
        btn_clear = new javax.swing.JButton();
        btn_add = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_Books = new javax.swing.JTable();
        lbl_control = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_titleBooks.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        lbl_titleBooks.setText("Books");
        jPanel1.add(lbl_titleBooks, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));
        jPanel1.add(txt_searchBookID, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 9, 240, 30));

        btn_search.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        btn_search.setText("SEARCH");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });
        jPanel1.add(btn_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 10, 150, 40));

        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 60));

        lbl_account.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        lbl_account.setText("Book ID");
        jPanel1.add(lbl_account, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        lbl_firstName.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        lbl_firstName.setText("Book Title");
        jPanel1.add(lbl_firstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        lbl_lastName.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        lbl_lastName.setText("Barcode");
        jPanel1.add(lbl_lastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        lbl_Birthday.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        lbl_Birthday.setText("Book Date");
        jPanel1.add(lbl_Birthday, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, -1, -1));

        lbl_gender.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        lbl_gender.setText("Category");
        jPanel1.add(lbl_gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, -1));

        lbl_email.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        lbl_email.setText("Book Type");
        jPanel1.add(lbl_email, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, -1, -1));

        lbl_phone.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        lbl_phone.setText("Publisher");
        jPanel1.add(lbl_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, -1, -1));

        lbl_status.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        lbl_status.setText("Book Price");
        jPanel1.add(lbl_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, -1, -1));
        jPanel1.add(txt_bookID, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 160, 30));
        jPanel1.add(txt_bookTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 160, 30));
        jPanel1.add(txt_barcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 160, 30));

        txt_bookDate.setDateFormatString("MM, dd, yyyy");
        txt_bookDate.setFont(new java.awt.Font("Dialog", 0, 11)); // NOI18N
        jPanel1.add(txt_bookDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 150, 30));

        combo_category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category", "fiction", "non-fiction" }));
        jPanel1.add(combo_category, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 150, 30));
        jPanel1.add(txt_bookPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, 160, 30));
        jPanel1.add(txt_publisher, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 140, 160, 30));

        combo_bookType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Type", "book", "video", "audio" }));
        jPanel1.add(combo_bookType, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 150, 30));

        btn_clear.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        btn_clear.setText("CLEAR");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        jPanel1.add(btn_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 100, 150, 40));

        btn_add.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        btn_add.setText("ADD");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        jPanel1.add(btn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 140, 150, 40));

        btn_update.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        btn_update.setText("UPDATE");
        jPanel1.add(btn_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 180, 150, 40));

        btn_delete.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        btn_delete.setText("DELETE");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });
        jPanel1.add(btn_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 220, 150, 40));

        jTable_Books.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book ID", "Book Title", "Barcode", "Book Date", "Category", "Book Type", "Publisher", "Book Price"
            }
        ));
        jTable_Books.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_BooksMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_Books);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 302, 930, 220));

        lbl_control.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(lbl_control, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 70, 190, 210));

        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 980, 480));

        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 950, 230));

        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 530));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // Feb 19, 2019 Roberto: This section will add the new record to the file
        if (checkInputs())    // verify the fields are not empty
        {
            String account = txt_bookID.getText();
            String firstname = txt_bookTitle.getText();
            String lastname = txt_barcode.getText();
            
            SimpleDateFormat dateFormat = new SimpleDateFormat("MM-dd-yyyy"); //  yyyy-MM-dd
            String addDate = dateFormat.format(txt_bookDate.getDate());
            String birthday = addDate;
            
            String gender = combo_category.getSelectedItem().toString();

            String email = txt_bookPrice.getText();
            String phone = txt_publisher.getText();
            String status = combo_bookType.getSelectedItem().toString();
             
            saveRecord(account, firstname, lastname, birthday, gender, email, phone, status, filepath);
            
            JOptionPane.showMessageDialog(null, "New Book has been created");
            Show_Books_In_JTable();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "One or More Fields are Empty");
        }   
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        // Feb 19, 2019 Roberto: This section will search by Account
        String searchterm = txt_searchBookID.getText();
        try {
            searchRecord(searchterm, filepath);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AddBooks.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "SEARCH ERROR");
        }
    }//GEN-LAST:event_btn_searchActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed

        
        // Feb 19, 2019 Roberto; This section will search by Account
        txt_bookID.setText(null);
        txt_bookTitle.setText(null);
        txt_barcode.setText(null);
        txt_bookPrice.setText(null);
        txt_publisher.setText(null);
        
    }//GEN-LAST:event_btn_clearActionPerformed

    private void jTable_BooksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_BooksMouseClicked
        // Mar 26, 2019 Roberto:  Selection from table
        int index = jTable_Books.getSelectedRow();
        ShowItem(index);
    }//GEN-LAST:event_jTable_BooksMouseClicked

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        if(!txt_bookID.getText().equals(""))
        {
            int index = jTable_Books.getSelectedRow();
           ((DefaultTableModel)jTable_Books.getModel()).removeRow(index); 
            JOptionPane.showMessageDialog(null,"Record has been DELETED!");
        }else{
        JOptionPane.showMessageDialog(null,"Book Not Deleted: No Book ID to Delete");
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    
    
    // Define BEHAVIOR
        public ArrayList<Book> getListMembers()
        {
            String acct = ""; 
            String firstName = ""; 
            String lastName = "";
            String birthday = "";
            String gender = "";
            String email = "";
            String phone = "";
            String status = "";
            
            ArrayList<Book> bookArrayList = new ArrayList<Book>();

            try
            {
               
                x = new Scanner(new File(filepath));
                x.useDelimiter("[,\n]");

                while (  x.hasNext() )
                {
                    acct = x.next();
                    firstName = x.next();
                    lastName = x.next();
                    birthday = x.next();                
                    gender = x.next();
                    email = x.next();
                    phone = x.next();
                    status = x.next();
                                  
                    Book line = new Book(acct, firstName, lastName, birthday, gender, email, phone, status);
                    bookArrayList.add(line);
                }
            }
            catch(Exception e)
            {
                //JOptionPane.showMessageDialog(null, "Error!" + e); // e
            }

            return bookArrayList;
        
        }
        
    // Feb 19, 2019 Roberto: For the ArrayList Part C 
        public void Show_Books_In_JTable()
    {
        DefaultTableModel model = (DefaultTableModel) jTable_Books.getModel();
        model.setRowCount(0);
        //DefaultTableModel model = (DefaultTableModel) jTable_Members.getModel();
        ArrayList<Book> list = getListMembers();
        
        Object rowData[] = new Object[8];
        for(int i=0; i < list.size(); i++)
        {
            rowData[0] = list.get(i).getbookid();
            rowData[1] = list.get(i).getbooktitle();
            rowData[2] = list.get(i).getbarcode();
            rowData[3] = list.get(i).getbookday();
            rowData[4] = list.get(i).getcategory();
            rowData[5] = list.get(i).getbooktype();
            rowData[6] = list.get(i).getpublisher();
            rowData[7] = list.get(i).getbookprice();
            model.addRow(rowData);
        }
        
    }
    
  
      // Mar 23, 2019 Roberto : ReadFileMembers set filename and confirm for debugging
        public void ReadFileMembers(String fileName)
        {

            boolean found = false;
            String memberID = ""; 
            String firstName = ""; 
            String lastName = "";
            String dob ="";
            String gender = "";
            String email = "";
            String phoneNumber = "";
            String status = "";
            
            try
            {
                x = new Scanner(new File(fileName));
                x.useDelimiter("[,\n]");
                while(x.hasNext() )
                {
                    memberID = x.next();
                    firstName = x.next();
                    lastName = x.next();
                    dob = x.next();
                    gender = x.next();
                    email = x.next();
                    phoneNumber = x.next();
                    status = x.next();

                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Error");
            }

        }      
        
   // Feb 19 2019 Roberto: Check Input Fields to verify they are not empty
        public boolean checkInputs()
        {
            if (    txt_bookID.getText() == null
                    || txt_bookTitle.getText() == null
                    || txt_barcode.getText() == null
                    || txt_bookPrice.getText() == null
                    || txt_publisher.getText() == null)
            {
                return false;
            } 
            else
            {
                return true;
            }
        }
        
    
          // Show Data In Inputs
    public void ShowItem(int index)
    {
                    txt_bookID.setText(getListMembers().get(index).getbookid());
                    txt_bookTitle.setText(getListMembers().get(index).getbooktitle());
                    txt_barcode.setText(getListMembers().get(index).getbarcode());
                    
                    try {
                    Date addDate = null;
                    addDate = new SimpleDateFormat("MM-dd-yyyy").parse((String)getListMembers().get(index).getbookday());
                    txt_bookDate.setDate(addDate);     
 
                    } catch (ParseException ex) {
                            Logger.getLogger(AddBooks.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    if ( getListMembers().get(index).getcategory().equals("fiction"))
                            {   
                                combo_category.setSelectedItem("fiction");
                            }
                    else
                    {
                        combo_category.setSelectedItem("non-fiction");
                    }
 
                    combo_bookType.setSelectedItem(getListMembers().get(index).getbooktype());
                    txt_publisher.setText(getListMembers().get(index).getpublisher());
                    txt_bookPrice.setText(getListMembers().get(index).getbookprice());

    }
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> combo_bookType;
    private javax.swing.JComboBox<String> combo_category;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_Books;
    private javax.swing.JLabel lbl_Birthday;
    private javax.swing.JLabel lbl_account;
    private javax.swing.JLabel lbl_control;
    private javax.swing.JLabel lbl_email;
    private javax.swing.JLabel lbl_firstName;
    private javax.swing.JLabel lbl_gender;
    private javax.swing.JLabel lbl_lastName;
    private javax.swing.JLabel lbl_phone;
    private javax.swing.JLabel lbl_status;
    private javax.swing.JLabel lbl_titleBooks;
    private javax.swing.JTextField txt_barcode;
    private com.toedter.calendar.JDateChooser txt_bookDate;
    private javax.swing.JTextField txt_bookID;
    private javax.swing.JTextField txt_bookPrice;
    private javax.swing.JTextField txt_bookTitle;
    private javax.swing.JTextField txt_publisher;
    private javax.swing.JTextField txt_searchBookID;
    // End of variables declaration//GEN-END:variables
}
