/*
 * MEMBERS FORM
 * FIELDS:  Accounts, First Name, Last Name, Birthday, Gender, Email, Phone, Status
 * FILE:   members.txt
 */
package TheMembers;


import TheMembers.MembersObject.Member;
import java.awt.print.PrinterException;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * Created Mar 23 2019
 * Modified April 4, 2019
 * @author Roberto Gomez
 * @version 2
 */
public class AllUsers extends javax.swing.JInternalFrame {

    /**
     * Feb 19, 2019 Roberto: Creates new form AddMember
     */
    public AllUsers() {
        initComponents();
        // Feb 20, 2019 Roberto: Update the Table
        Show_Members_In_JTable();
    }
    
    // Feb 20 2019 Roberto: This is the file that has all the data for this package
    String filepath = "member.txt";
    private static Scanner x;
    ArrayList<Member> updateList = getListMembers();
    
    
   // Feb 19, 2019 Roberto: This section search for a Record in the file by Employee ID
        public static void searchAccount (String searchterm, String filepath) throws FileNotFoundException
        {
            boolean found = false;
            String account = "";
            String firstName = "";
            String lastName = "";
            String birthday;
            String gender;
            String email;
            String phone;
            String status;
            
            try
            {
                x = new Scanner(new File(filepath));
                x.useDelimiter("[,\n]");
                
                while(x.hasNext() && !found )
                {
                    account = x.next();
                    firstName = x.next();
                    lastName = x.next();
                    birthday = x.next();                
                    gender = x.next();
                    email = x.next();
                    phone = x.next();
                    status = x.next();
                    
                    if ( account.equals(searchterm))
                    {
                        found = true;
                    }
                }
                if (found)
                {
                    JOptionPane.showMessageDialog(null, "Account: " + account
                            + "\nFirst Name: " + firstName
                            + "\nLast Name: " + lastName);
                            
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"record NOT found");
                }
                
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(null, "Error");
            }
                    
        }
    
    
        // Feb 19, 2019 Roberto: This section will save the new record in the file
        public static void saveRecord(String account, String FirstName, String LastName, String Birthday, String Gender, String Email, String Phone, String Status, String FilePath)
        {
            try
            {
                FileWriter fw = new FileWriter(FilePath, true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pw = new PrintWriter(bw);
                
                pw.println(account + ", " + FirstName + ", " + LastName + ", "
                        + Birthday + ", " + Gender + ", " + Email + ", "
                        + Phone + ", " + Status + "\n");
                pw.flush();
                pw.close();
                
                JOptionPane.showMessageDialog(null, "Record Saved");
            }
            catch (Exception E)
            {
                JOptionPane.showMessageDialog(null, "Record NOT saved");
            }
        }
        
        // Mar 29, 2019 Roberto:  Save ArrayList to File
        public void save(String fileName) throws FileNotFoundException {
        try (PrintWriter pw = new PrintWriter(new FileOutputStream(fileName))) 
        {
         //   
         //      
        }
}
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_titleMembers = new javax.swing.JLabel();
        lbl_accountLookup = new javax.swing.JLabel();
        txt_searchAccount = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        btn_print = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_Members = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_titleMembers.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        lbl_titleMembers.setText("All Users");
        jPanel1.add(lbl_titleMembers, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, -1, -1));

        lbl_accountLookup.setFont(new java.awt.Font("Dialog", 3, 11)); // NOI18N
        lbl_accountLookup.setText("Account Lookup:");
        jPanel1.add(lbl_accountLookup, new org.netbeans.lib.awtextra.AbsoluteConstraints(484, 15, 110, 20));
        jPanel1.add(txt_searchAccount, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 9, 120, 30));

        btn_search.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        btn_search.setText("SEARCH");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });
        jPanel1.add(btn_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 10, 150, 40));

        btn_print.setFont(new java.awt.Font("Dialog", 3, 14)); // NOI18N
        btn_print.setText("Print");
        btn_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_printActionPerformed(evt);
            }
        });
        jPanel1.add(btn_print, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 490, -1, -1));

        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 60));

        jTable_Members.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account", "First Name", "Last Name", "Birthday", "Gender", "Email", "Phone", "Status"
            }
        ));
        jTable_Members.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_MembersMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_Members);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 102, 930, 370));

        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 980, 480));

        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 530));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        // Feb 19, 2019 Roberto: This section will search by Account
        String searchterm = txt_searchAccount.getText();
        try {
            searchAccount(searchterm, filepath);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AllUsers.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "SEARCH ERROR");
        }
    }//GEN-LAST:event_btn_searchActionPerformed

    private void jTable_MembersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_MembersMouseClicked
        // Mar 26, 2019 Roberto:  Selection from table
        int index = jTable_Members.getSelectedRow();
     
    }//GEN-LAST:event_jTable_MembersMouseClicked

    private void btn_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_printActionPerformed
        MessageFormat header = new MessageFormat("University of Houston - Downtown     LIBRARY");
        MessageFormat footer = new MessageFormat(" Users Report");
        try{
            jTable_Members.print(JTable.PrintMode.FIT_WIDTH, header,footer);
        }
        catch(PrinterException e){
            JOptionPane.showMessageDialog(null, "Cannot Print");
        }
    }//GEN-LAST:event_btn_printActionPerformed

    
    
    // Define BEHAVIOR
        public ArrayList<Member> getListMembers()
        {
            String acct = ""; 
            String firstName = ""; 
            String lastName = "";
            String birthday = "";
            String gender = "";
            String email = "";
            String phone = "";
            String status = "";
            
            ArrayList<Member> memberArrayList = new ArrayList<Member>();
            // ArrayList<Items> list = new ArrayList<Items>();
            try
            {
               
                x = new Scanner(new File(filepath));
                x.useDelimiter("[,\n]");

                while (  x.hasNext() )
                {
                    acct = x.next();
                    firstName = x.next();
                    lastName = x.next();
                    birthday = x.next();                
                    gender = x.next();
                    email = x.next();
                    phone = x.next();
                    status = x.next();
                   
                  
                    Member line = new Member(acct, firstName, lastName, birthday, gender, email, phone, status);
                    memberArrayList.add(line);
  

                }
            }
            catch(Exception e)
            {
                //JOptionPane.showMessageDialog(null, "ArrayList Error HERE" + e); // e
            }

            return memberArrayList;
        
        }
        
    // Feb 19, 2019 Roberto: For the ArrayList Part C 
        public void Show_Members_In_JTable()
    {
        DefaultTableModel model = (DefaultTableModel) jTable_Members.getModel();
        model.setRowCount(0);
        //DefaultTableModel model = (DefaultTableModel) jTable_Members.getModel();
        ArrayList<Member> list = getListMembers();
        
        Object rowData[] = new Object[8];
        for(int i=0; i < list.size(); i++)
        {
            rowData[0] = list.get(i).getaccount();
            rowData[1] = list.get(i).getfirstname();
            rowData[2] = list.get(i).getlastname();
            rowData[3] = list.get(i).getbirthday();
            rowData[4] = list.get(i).getgender();
            rowData[5] = list.get(i).getemail();
            rowData[6] = list.get(i).getphone();
            rowData[7] = list.get(i).getstatus();
            model.addRow(rowData);
        }
        
    }
    
  
      // Mar 23, 2019 Roberto : ReadFileMembers set filename and confirm for debugging
        public void ReadFileMembers(String fileName)
        {

            boolean found = false;
            String memberID = ""; 
            String firstName = ""; 
            String lastName = "";
            String dob ="";
            String gender = "";
            String email = "";
            String phoneNumber = "";
            String status = "";
            
            try
            {
                x = new Scanner(new File(fileName));
                x.useDelimiter("[,\n]");
                while(x.hasNext() )
                {
                    memberID = x.next();
                    firstName = x.next();
                    lastName = x.next();
                    dob = x.next();
                    gender = x.next();
                    email = x.next();
                    phoneNumber = x.next();
                    status = x.next();

                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, "Error");
            }

        }      
        
         // April 4, 2019 Roberto : WriteFileMembers backt to members.txt
        public void WriteFileMembers( String fileName) throws IOException
                // Write Arraylist X back to members.txt
        {
            // ArrayList<Member> updateList = getListMembers();
            FileWriter writer = new FileWriter("member.txt"); 
            for(Member str: updateList)
            {
                writer.write(str.getaccount() +"," + str.getfirstname() + "," + str.getlastname() + "," + str.getbirthday()+"," + str.getgender() 
                        + "," + str.getemail() + "," + str.getphone() + "," + str.getstatus() + "\n");
            }
            writer.close();

        }        
        
        


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_print;
    private javax.swing.JButton btn_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_Members;
    private javax.swing.JLabel lbl_accountLookup;
    private javax.swing.JLabel lbl_titleMembers;
    private javax.swing.JTextField txt_searchAccount;
    // End of variables declaration//GEN-END:variables
}
